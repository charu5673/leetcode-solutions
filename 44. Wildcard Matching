class Solution {
    Boolean[][] cache;
    public boolean recMatch(String s, String p, int i, int j) {
        if(i == s.length() && j == p.length()) return true;
        else if(i == s.length() || j == p.length()) return false;
        if(cache[i][j] != null) return cache[i][j];
        if(s.charAt(i) == p.charAt(j) || p.charAt(j) == '?') {
            if(i+1 < s.length() && j+1 < p.length()) {
                if(cache[i+1][j+1] == null) cache[i+1][j+1] = recMatch(s,p,i+1,j+1);
                return cache[i+1][j+1];
            } else if(i+1 == s.length() && j+1 == p.length()) return true;
            else if(i+1 == s.length()) {
                if(p.substring(j+1).replaceAll("\\*","").length() == 0) return true;
                else return false;
            }
        }
        if(p.charAt(j) != '*') {
            cache[i][j]=false;
            return false;
        }
        if(i+1 < s.length()) {
            if(cache[i+1][j] == null) cache[i+1][j] = recMatch(s,p,i+1,j);
            if(cache[i+1][j]) return true;
        }
        if(j+1 < p.length()) {
            if(cache[i][j+1] == null) cache[i][j+1] = recMatch(s,p,i,j+1);
            if(cache[i][j+1]) return true;
        }
        if(i+1 < s.length() && j+1 < p.length()) {
            if(cache[i+1][j+1] == null) cache[i+1][j+1] = recMatch(s,p,i+1,j+1);
            if(cache[i+1][j+1]) return true;
        } else if(i+1 == s.length() && j+1 == p.length()) return true;
        return false;
    }
    public boolean isMatch(String s, String p) {
        if(s.length() == 0) {
            if(p.length() == 0 || p.replaceAll("\\*","").length() == 0) return true;
            return false;
        } else if(p.length() == 0) return false;
        cache = new Boolean[s.length()][p.length()];
        return recMatch(s,p,0,0);
    }
}
