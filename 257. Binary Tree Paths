/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<String> ans = new LinkedList<String>();
    public void getPaths(TreeNode root, String c) {
        if(root.left == null && root.right == null) {
            c += root.val;
            ans.add(c);
            return;
        } else {
            if(root.left != null) {
                getPaths(root.left, c + root.val + "->");
            }
            if(root.right != null) {
                getPaths(root.right, c + root.val + "->");
            }
        }
    }
    public List<String> binaryTreePaths(TreeNode root) {
        if(root == null) return new LinkedList<String>();
        getPaths(root, "");
        return ans;
    }
}
