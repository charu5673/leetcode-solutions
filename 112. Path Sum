/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    boolean flag = false;
    public void checkPath(TreeNode root, int t, int c) {
        if(flag) return;
        if(root == null) return;
        if(flag) return;
        c += root.val;
        if(flag) return;
        if(root.left == null && root.right == null && c == t) flag = true;
        if(flag) return;
        else if(root.left == null && root.right == null) return;
        if(flag) return;
        checkPath(root.left, t, c);
        if(flag) return;
        checkPath(root.right, t, c);
    }
    public boolean hasPathSum(TreeNode root, int targetSum) {
        checkPath(root, targetSum, 0);
        return flag;        
    }
}
