/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int min = 1000000;
    public void getMinDepth(TreeNode root, int d) {
        if(d >= min) return;
        if(root.left == null && root.right == null) {
            if(d < min) min = d;
            return;
        }
        if(d + 1 >= min) return;
        if(root.left != null) getMinDepth(root.left, d + 1);
        if(root.right != null) getMinDepth(root.right, d + 1);
    }
    public int minDepth(TreeNode root) {
        if(root == null) return 0;
        getMinDepth(root, 1);
        return min;
    }
}
